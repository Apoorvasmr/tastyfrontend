[{"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\index.js":"1","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\App.js":"2","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\store\\store.js":"4","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\reducers.js":"5","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\reducers.js":"6","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\posts\\reducers.js":"7","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\Router.jsx":"8","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\actions.js":"9","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\store\\initialState.js":"10","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\actions.js":"11","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\posts\\actions.js":"12","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\containers\\Home.jsx":"13","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\operations.js":"14","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\selectors.js":"15","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\operations.js":"16","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\selectors.js":"17","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\common\\Footer.jsx":"18","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\common\\Header.jsx":"19","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\popup\\Review.jsx":"20","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\common\\Item.jsx":"21","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\popup\\WriteReview.jsx":"22","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\API.js":"23"},{"size":861,"mtime":1672212869733,"results":"24","hashOfConfig":"25"},{"size":160,"mtime":1672212869458,"results":"26","hashOfConfig":"25"},{"size":417,"mtime":1672212869758,"results":"27","hashOfConfig":"25"},{"size":856,"mtime":1672212869757,"results":"28","hashOfConfig":"25"},{"size":375,"mtime":1672212869746,"results":"29","hashOfConfig":"25"},{"size":856,"mtime":1672212869739,"results":"30","hashOfConfig":"25"},{"size":865,"mtime":1672212869753,"results":"31","hashOfConfig":"25"},{"size":347,"mtime":1672212869458,"results":"32","hashOfConfig":"25"},{"size":155,"mtime":1672212869743,"results":"33","hashOfConfig":"25"},{"size":221,"mtime":1672212869756,"results":"34","hashOfConfig":"25"},{"size":824,"mtime":1672212869736,"results":"35","hashOfConfig":"25"},{"size":492,"mtime":1672212869750,"results":"36","hashOfConfig":"25"},{"size":3989,"mtime":1672212869731,"results":"37","hashOfConfig":"25"},{"size":420,"mtime":1672212869744,"results":"38","hashOfConfig":"25"},{"size":176,"mtime":1672212869747,"results":"39","hashOfConfig":"25"},{"size":2356,"mtime":1672212869738,"results":"40","hashOfConfig":"25"},{"size":260,"mtime":1672212869741,"results":"41","hashOfConfig":"25"},{"size":1229,"mtime":1672212869719,"results":"42","hashOfConfig":"25"},{"size":423,"mtime":1672212869721,"results":"43","hashOfConfig":"25"},{"size":4284,"mtime":1672212869726,"results":"44","hashOfConfig":"25"},{"size":3246,"mtime":1672212869723,"results":"45","hashOfConfig":"25"},{"size":3792,"mtime":1672212869728,"results":"46","hashOfConfig":"25"},{"size":3373,"mtime":1672236313147,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"118qusp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\index.js",[],["100","101"],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\App.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\store\\store.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\reducers.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\reducers.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\posts\\reducers.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\Router.jsx",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\actions.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\store\\initialState.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\actions.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\posts\\actions.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\containers\\Home.jsx",["102","103","104","105","106","107","108","109"],"import React from 'react'\r\nimport Header from \"../components/common/Header\"\r\nimport Footer from \"../components/common/Footer\"\r\nimport Item from '../components/common/Item'\r\nimport Review from '../components/popup/Review'\r\nimport WriteReview from '../components/popup/WriteReview'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {fetchItems} from \"../reducks/items/operations\"\r\nimport { getItems } from '../reducks/items/selectors'\r\nimport { getCarts,getSubtotal} from \"../reducks/carts/selectors\"\r\nimport { fetchFromLocalStorage } from '../reducks/carts/operations'\r\nimport queryString from \"query-string\"\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {push} from 'connected-react-router'\r\nconst Home = () => {\r\n    const parsed = queryString.parse(window.location.search);\r\n    const [showWriteReview, setShowWriteReview] = useState(false);\r\n    const [showReview, setShowReview] = useState(false);\r\n    const [showCartList, setShowCartList] = useState(false);\r\n    const [selectedItemId, setSelectedItemId] = useState();\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(state => state);\r\n    const items = getItems(selector);\r\n    const carts = getCarts(selector);\r\n    const subtotal = getSubtotal(selector);\r\n    const [temp,  setTemp]=useState('')\r\n    const all =() => {\r\n        dispatch(push('/'))\r\n        setTemp('sdfhgj')\r\n    }\r\n    const hot =() => {\r\n        dispatch(push('/?category=hot'))\r\n        setTemp('dfghj')\r\n    }\r\n    const cold =() => {\r\n        dispatch(push('/?category=cold'))\r\n        setTemp('dfghfgh')\r\n    }\r\n    const bagel =() => {\r\n        dispatch(push('/?category=bagel'))\r\n        setTemp('dfghjkk')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFromLocalStorage());\r\n        dispatch(fetchItems(parsed.category));\r\n    }, [temp]);\r\n\r\n    const showItem = item => {\r\n        let selected_count = 0;\r\n        if (carts[item.id] && carts[item.id].selected_count) {\r\n            selected_count = carts[item.id].selected_count;\r\n        }\r\n        if (showCartList && carts[item.id] === undefined) {\r\n            // if the page is cart page and item is not slected, show nothing.\r\n            return;\r\n        }\r\n        return (\r\n            <div>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    selected_count={selected_count}\r\n                    setShowWriteReview={setShowWriteReview}\r\n                    setShowReview={setShowReview}\r\n                    setSelectedItemId={selectedItemId}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n  return (\r\n    <div>\r\n        <Header/>\r\n    <div className=\"menu\">\r\n        {showCartList?(\r\n            <h2 className=\"title\"> Cart</h2>\r\n        ):(\r\n\r\n            <>\r\n                    <h2 className=\"title\"> Our Most Popular Recipes</h2>\r\n                    <p>Try Our Most Delicious foods and it usually takes minutes to deliver\r\n                    </p>\r\n\r\n                    <div className=\"btn\">\r\n\r\n\r\n                        <a onClick={all}  className=\"btn btn-secondary\" > ALL</a>\r\n                        <a onClick={hot} className=\"btn btn-secondary\">HOT</a>\r\n                        <a onClick={cold} className=\"btn btn-secondary\">COLD</a>\r\n                        <a onClick={bagel} className=\"btn btn-secondary\">BAGEL</a>\r\n                    </div>\r\n            \r\n                \r\n            </>    \r\n        )} \r\n        <div className=\"container\">{items && items.map(item=>showItem(item))} </div>\r\n      </div> \r\n         <Footer price={subtotal} showCartList={showCartList} setShowCartList={setShowCartList} />\r\n         {showWriteReview && (\r\n             <WriteReview\r\n                selectedItemId={selectedItemId} \r\n                setSelectedItemId={setSelectedItemId}\r\n                setShowWriteReview={setShowWriteReview}\r\n             />\r\n\r\n        )} \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home\r\n","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\operations.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\items\\selectors.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\operations.js",["110","111"],"import API from '../../API';\r\n// import { fetchItemsAction } from \"../items/actions\";\r\nimport { addCartAction, decreaseCartAction, increaseCartAction, fetchCartAction } from './actions';\r\n\r\nconst api = new API();\r\nconst CARTS_KEY = 'CARTS_KEY';\r\n\r\nexport const fetchFromLocalStorage = () => {\r\n    return async dispatch => {\r\n        let cartsJSON = localStorage.getItem('CARTS_KEY');\r\n        let carts = {};\r\n        if (cartsJSON) {\r\n            carts = JSON.parse(cartsJSON);\r\n        }\r\n        const subtotal = calculateSubtotal(carts);\r\n        dispatch(fetchCartAction(carts, subtotal));\r\n    };\r\n};\r\nexport const addCart = item => {\r\n    return async (dispatch, getState) => {\r\n        let prevCarts = getState().carts.list;\r\n        prevCarts[item.id] = { item: item, selected_count: 1 };\r\n        const subtotal = calculateSubtotal(prevCarts);\r\n        setToLocalStorage(prevCarts);\r\n        dispatch(addCartAction(prevCarts, subtotal));\r\n    };\r\n};\r\n\r\nexport const increaseCart = item => {\r\n    return async (dispatch, getState) => {\r\n        let prevCarts = getState().carts.list;\r\n        let nextSeletedCount = prevCarts[item.id].selected_count + 1;\r\n        prevCarts[item.id] = { item: item, selected_count: nextSeletedCount };\r\n        const subtotal = calculateSubtotal(prevCarts);\r\n        setToLocalStorage(prevCarts);\r\n        dispatch(increaseCartAction(prevCarts, subtotal));\r\n    };\r\n};\r\n\r\nexport const decreaseCart = item => {\r\n    return async (dispatch, getState) => {\r\n        let prevCarts = getState().carts.list;\r\n        let nextSeletedCount = prevCarts[item.id].selected_count - 1;\r\n        if (nextSeletedCount > 0) {\r\n            prevCarts[item.id] = { item: item, selected_count: nextSeletedCount };\r\n        } else {\r\n            delete prevCarts[item.id];\r\n        }\r\n        const subtotal = calculateSubtotal(prevCarts);\r\n        setToLocalStorage(prevCarts);\r\n        dispatch(decreaseCartAction(prevCarts, subtotal));\r\n    };\r\n};\r\nconst setToLocalStorage = carts => {\r\n    localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\r\n};\r\n\r\nconst calculateSubtotal = carts => {\r\n    let subtotal = 0;\r\n    console.log(carts);\r\n    for (let key in carts) {\r\n        subtotal += Number(carts[key].item.price) * carts[key].selected_count;\r\n    }\r\n    console.log(subtotal);\r\n    return subtotal;\r\n    subtotal = '';\r\n};\r\n","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\reducks\\carts\\selectors.js",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\common\\Footer.jsx",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\common\\Header.jsx",[],"C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\popup\\Review.jsx",["112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from 'react'\r\nimport Icon from '../../assets/img/Icon ionic-ios-close-circle.png'\r\nimport Heart from '../../assets/img/Icon awesome-heart.png'\r\nimport Heartt from '../../assets/img/Icon awesome-heart.png'\r\nimport RedHeart from '../../assets/img/heart.png'\r\nimport Thumbs from '../../assets/img/thumbs-down.png'\r\nimport API from '../../API'\r\nimport { useDispatch } from 'react-redux';\r\nimport close  from '../common/Item'\r\n\r\nconst api= new API();\r\nconst Review = props => {\r\n    console.log('reviews', props);\r\n    const [reviews, setReviews] = useState([]);\r\n    const [selectedItemId, setSelectedItemId] = useState(props.selectedItemId);\r\n    const dispatch = useDispatch()\r\n\r\n    const [likeCount, setLikeCount] = useState(1),\r\n    [name, setName] = useState(''),\r\n    [body, setBody] = useState('');\r\n\r\n    let temp = props.selectedItemId;\r\n    const [showReviews, setShowReview] = useState();\r\n    useEffect((selectedItemId, setSelectedItemId) => {\r\n        api.getReviews(temp).then(reviews => {\r\n            setReviews(reviews);\r\n            console.log('useeffect', reviews);\r\n        });\r\n    }, []);\r\n\r\n    const getImgReaction=like_count=>{\r\n        switch(like_count){\r\n            case 1:\r\n                return Heart ;\r\n            case 2:\r\n                return Heartt;\r\n            case 3:\r\n                return RedHeart;\r\n            default:\r\n                return Thumbs;\r\n\r\n        }\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n      <form className=\"popup\">\r\n        <div className=\"popup-inner\">\r\n   \r\n            <img src={Icon} onClick={props.close} className=\"close\"/>\r\n            <div className=\"input\">\r\n                <h1>Reviews</h1>\r\n           \r\n            <div className=\"buttons\">\r\n                        <button>\r\n                            {likeCount === 1 ? (\r\n                                <img src={Heart} className=\"selected\" onClick={() => setLikeCount(1)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={Heart} onClick={() => setLikeCount(1)} alt=\"\" />\r\n                            )}\r\n                             <p>GOOD</p>\r\n                        </button>\r\n                        <button>\r\n                            {likeCount === 2 ? (\r\n                                <img src={Heartt} className=\"selected\" onClick={() => setLikeCount(2)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={Heartt} onClick={() => setLikeCount(2)} alt=\"\" />\r\n                            )}\r\n                             <p>VERY GOOD</p>\r\n                        </button>\r\n                        <button>\r\n                            {likeCount === 3 ? (\r\n                                <img src={RedHeart} className=\"selected\" onClick={() => setLikeCount(3)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={RedHeart} onClick={() => setLikeCount(3)} alt=\"\" />\r\n                            )}\r\n                             <p>EXCELLENT</p>\r\n                        </button>\r\n                        <button>\r\n                            {likeCount === 4 ? (\r\n                                <img src={Thumbs} className=\"selected\" onClick={() => setLikeCount(4)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={Thumbs} onClick={() => setLikeCount(4)} alt=\"\" />\r\n                            )}\r\n                             <p>NOT GOOD</p>\r\n                        </button>\r\n                    </div>\r\n\r\n            <div className=\"input\">\r\n            {reviews && reviews.map(review=>  (\r\n            \r\n                \r\n                    <>\r\n                        <div className=\"sendd\">\r\n                            <div className='rev'>\r\n                                <img src={getImgReaction(review.like_count)} alt=\"\"/>\r\n                                <input type=\"text\" name=\"name\" value={review.name}/><br/>\r\n                            </div>\r\n                            <input type=\"text\" name=\"textarea\" value={review.body}/><br />  \r\n                        </div>\r\n                    </> \r\n                ))}     \r\n            </div>\r\n        </div>\r\n        </div>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Review\r\n","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\common\\Item.jsx",["124","125"],"import React, { useState } from 'react'\r\nimport Heart from \"../../assets/img/heart.png\"\r\nimport { useDispatch } from 'react-redux'\r\nimport {addCart,increaseCart,decreaseCart} from \"../../reducks/carts/operations\"\r\nimport WriteReview from '../popup/WriteReview'\r\nimport Review from '../popup/Review'\r\n\r\nconst Item = props => {\r\n    const close = () => {\r\n        setSelectedItemId(props.item.id);\r\n        setShowReview(false)\r\n        console.log('asdfghjkll',showReview);\r\n    }\r\n    const[selectedItemId, setSelectedItemId]=useState(props.selectedItemId);\r\n    const[showReview, setShowReview]=useState(props.setReviews);\r\n    const[showWriteReview, setShowWriteReview]=useState(props.setShowWriteReview);\r\n\r\n    const dispatch=useDispatch();\r\n    const clickAddCart=()=>{\r\n        dispatch(addCart(props.item));\r\n    };\r\n    const clickPlusCart=()=>{\r\n        dispatch(increaseCart(props.item));\r\n    };\r\n    const clickMinusCart=()=>{\r\n        dispatch(decreaseCart(props.item));\r\n    };\r\n    const clickCheckReview=()=>{\r\n        setSelectedItemId(props.item.id);\r\n        setShowReview(true);\r\n    };\r\n    const clickWriteReview=()=>{\r\n        setSelectedItemId(props.item.id);\r\n        setShowWriteReview(true);\r\n    }; \r\n\r\n       \r\n  return (\r\n      \r\n    <div>\r\n        \r\n            <div className=\"items\">\r\n                <img src={props.item.image} alt=\"\"/>\r\n                <div className=\"details\">\r\n                    <div className=\"like\">\r\n                         <img src={Heart} className=\"heart\" alt=\"\"/>\r\n                        <p>({props.item.total_like_count})</p>\r\n                    </div>\r\n                    <h2>{props.item.name} </h2>  \r\n                    <div className=\"details-sub\">\r\n                        <a onClick={()=>clickWriteReview(true)}>Write Review</a>\r\n                        <a onClick={()=>clickCheckReview(true)}>Check Review</a>\r\n                    </div>\r\n                    <div className=\"details-price\">\r\n                        {props.selected_count===0?(\r\n                            <button onClick={clickAddCart}>Add To Cart</button>   \r\n                        ):(\r\n                            <button>\r\n                                <span onClick={clickMinusCart}>-</span>\r\n                                <span>{props.selected_count}</span>\r\n                                <span onClick={clickPlusCart}>+</span>\r\n                            </button>\r\n                        )\r\n                    }\r\n                        \r\n                        <h3 className=\"price\">${props.item.price}</h3>\r\n                    </div>\r\n                </div>\r\n        \r\n            \r\n        \r\n            \r\n        </div> \r\n        {showWriteReview && (\r\n            <WriteReview\r\n                selectedItemId={selectedItemId}\r\n                setSelectedItemId={setSelectedItemId}\r\n                setShowWriteReview={setShowWriteReview}\r\n            />\r\n        )}\r\n         {showReview && (\r\n            <Review\r\n                selectedItemId={selectedItemId}\r\n                setSelectedItemId={setSelectedItemId}\r\n                setShowReview={setShowReview}\r\n                close = {close}\r\n            />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Item;\r\n\r\n","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\components\\popup\\WriteReview.jsx",["126"],"import React from 'react'\r\nimport Icon from '../../assets/img/Icon ionic-ios-close-circle.png'\r\nimport Heart from '../../assets/img/Icon awesome-heart.png'\r\nimport Heartt from '../../assets/img/Icon awesome-heart.png'\r\nimport RedHeart from '../../assets/img/heart.png'\r\nimport Thumbs from '../../assets/img/thumbs-down.png'\r\nimport API from '../../API'\r\nimport { useState } from 'react'\r\n\r\nconst api=new API ();\r\n\r\nconst WriteReview = ({ selectedItemId, setSelectedItemId, setShowWriteReview }) => {\r\n    const [likeCount, setLikeCount] = useState(1),\r\n        [name, setName] = useState(''),\r\n        [body, setBody] = useState('');\r\n\r\n    const inputName = event => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const inputBody = event => {\r\n        setBody(event.target.value);\r\n    };\r\n\r\n    const sendReviewButton = () => {\r\n        api.writeReview(selectedItemId, name, body, likeCount).then((review) => {\r\n          alert(\"Your review has been sent. Thank you for your review!\");\r\n          setName(\"\");\r\n          setBody(\"\");\r\n          setLikeCount(1);\r\n          setSelectedItemId(null);\r\n          setShowWriteReview(false);\r\n        });\r\n      };\r\n\r\n  return (\r\n    <div>\r\n          <form className=\"popup\">\r\n        <div className=\"popup-inner\">\r\n            <img src={Icon} onClick={()=>setShowWriteReview(false)} className=\"close\"/>\r\n            <div className=\"input\">\r\n                <h1>Write Review</h1>\r\n                <h3>Choose Your Thoughts</h3>\r\n                <div className=\"buttons\">\r\n                        <button>\r\n                            {likeCount === 1 ? (\r\n                                <img src={Heart} className=\"selected\" onClick={() => setLikeCount(1)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={Heart} onClick={() => setLikeCount(1)} alt=\"\" />\r\n                            )}\r\n                            <p>GOOD</p>\r\n                        </button>\r\n                        <button>\r\n                            {likeCount === 2 ? (\r\n                                <img src={Heartt} className=\"selected\" onClick={() => setLikeCount(2)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={Heartt} onClick={() => setLikeCount(2)} alt=\"\" />\r\n                            )}\r\n                            <p>VERY GOOD</p>\r\n                        </button>\r\n                        \r\n                        <button>\r\n                            {likeCount === 3 ? (\r\n                                <img src={RedHeart} className=\"selected\" onClick={() => setLikeCount(3)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={RedHeart} onClick={() => setLikeCount(3)} alt=\"\" />\r\n                            )}\r\n                            <p>EXCELLENT</p>\r\n                        </button>\r\n                        <button>\r\n                            {likeCount === 4 ? (\r\n                                <img src={Thumbs} className=\"selected\" onClick={() => setLikeCount(4)} alt=\"\" />\r\n                            ) : (\r\n                                <img src={Thumbs} onClick={() => setLikeCount(4)} alt=\"\" />\r\n                            )}\r\n                            <p>NOT GOOD</p>\r\n                        </button>\r\n                    </div>\r\n                <div className=\"send\">\r\n                <input onChange={inputName} type=\"text\" name=\"name\" placeholder=\"Enter your name\" required />\r\n            <textarea onChange={inputBody} name=\"body\" placeholder=\"Enter your review\" required></textarea>\r\n            <button onClick={sendReviewButton}>Send Review</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WriteReview\r\n","C:\\Users\\Apoorva\\Documents\\Tasty-Taters\\Frontend\\src\\API.js",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":19,"column":12,"nodeType":"134","messageId":"135","endLine":19,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":48,"column":8,"nodeType":"140","endLine":48,"endColumn":14,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":88,"column":25,"nodeType":"144","endLine":88,"endColumn":74},{"ruleId":"142","severity":1,"message":"143","line":89,"column":25,"nodeType":"144","endLine":89,"endColumn":72},{"ruleId":"142","severity":1,"message":"143","line":90,"column":25,"nodeType":"144","endLine":90,"endColumn":73},{"ruleId":"142","severity":1,"message":"143","line":91,"column":25,"nodeType":"144","endLine":91,"endColumn":74},{"ruleId":"132","severity":1,"message":"145","line":5,"column":7,"nodeType":"134","messageId":"135","endLine":5,"endColumn":10},{"ruleId":"146","severity":1,"message":"147","line":66,"column":5,"nodeType":"148","messageId":"149","endLine":66,"endColumn":19},{"ruleId":"132","severity":1,"message":"150","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":13},{"ruleId":"132","severity":1,"message":"151","line":15,"column":12,"nodeType":"134","messageId":"135","endLine":15,"endColumn":26},{"ruleId":"132","severity":1,"message":"152","line":15,"column":28,"nodeType":"134","messageId":"135","endLine":15,"endColumn":45},{"ruleId":"132","severity":1,"message":"153","line":16,"column":11,"nodeType":"134","messageId":"135","endLine":16,"endColumn":19},{"ruleId":"132","severity":1,"message":"154","line":19,"column":6,"nodeType":"134","messageId":"135","endLine":19,"endColumn":10},{"ruleId":"132","severity":1,"message":"155","line":19,"column":12,"nodeType":"134","messageId":"135","endLine":19,"endColumn":19},{"ruleId":"132","severity":1,"message":"156","line":20,"column":6,"nodeType":"134","messageId":"135","endLine":20,"endColumn":10},{"ruleId":"132","severity":1,"message":"157","line":20,"column":12,"nodeType":"134","messageId":"135","endLine":20,"endColumn":19},{"ruleId":"132","severity":1,"message":"158","line":23,"column":12,"nodeType":"134","messageId":"135","endLine":23,"endColumn":23},{"ruleId":"132","severity":1,"message":"159","line":23,"column":25,"nodeType":"134","messageId":"135","endLine":23,"endColumn":38},{"ruleId":"138","severity":1,"message":"160","line":29,"column":8,"nodeType":"140","endLine":29,"endColumn":10,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":50,"column":13,"nodeType":"144","endLine":50,"endColumn":70},{"ruleId":"142","severity":1,"message":"143","line":51,"column":25,"nodeType":"144","endLine":51,"endColumn":65},{"ruleId":"142","severity":1,"message":"143","line":52,"column":25,"nodeType":"144","endLine":52,"endColumn":65},{"ruleId":"162","severity":1,"message":"163","line":40,"column":13,"nodeType":"144","endLine":40,"endColumn":88},{"ruleId":"132","severity":1,"message":"164","line":2,"column":7,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Review' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'showReview' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'parsed.category'. Either include them or remove the dependency array.","ArrayExpression",["167"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'api' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'close' is defined but never used.","'selectedItemId' is assigned a value but never used.","'setSelectedItemId' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'body' is assigned a value but never used.","'setBody' is assigned a value but never used.","'showReviews' is assigned a value but never used.","'setShowReview' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'temp'. Either include it or remove the dependency array.",["168"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'LOGIN_USER_KEY' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [dispatch, parsed.category, temp]",{"range":"173","text":"174"},"Update the dependencies array to be: [temp]",{"range":"175","text":"176"},[1858,1864],"[dispatch, parsed.category, temp]",[1142,1144],"[temp]"]